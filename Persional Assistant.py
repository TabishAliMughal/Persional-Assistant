from tkinter import Tk,Frame,Label,Button,E,W,N,S,StringVar,TOP,BOTTOM,LEFT,RIGHT,Entry,Scrollbar,Listbox,END
import tkinter as tk
from tkinter import ttk
import tkinter.messagebox
import Backend
from reportlab.pdfgen import canvas
from reportlab.pdfbase import pdfmetrics
from reportlab.pdfbase.ttfonts import TTFont
import datetime
from tkcalendar import Calendar
import calendar

class Dashboard:
    def __init__(self,master):
        self.master=master
        self.master.title("CSS Persional Assistant")
        self.master.geometry("900x550+1+1")
        self.master.config(bg="Yellow")
        self.master.iconbitmap(r"CSS.ico")
        self.frame=Frame(self.master)
        self.frame.pack()
        MainFrame=Frame(self.frame)
        MainFrame.grid()
        MainFrame.config(bg="Teal")

        
        MajorGoals=StringVar()
        MainGoal = StringVar()
        Main=[]
        M=[]
        SubGoals=StringVar()
        SubGoal = StringVar()
        Sub=[]
        S=[]
        Task = StringVar()
        Task=[]
        Task=[]
        T=[]
        User = StringVar()
        StartingDate = StringVar()
        EndDate = StringVar()
        SelectedDate=StringVar()
        Date=[]


        TitleFrame=Frame(MainFrame)
        TitleFrame.grid()
        TitleFrame.config(bg="yellow")
        label=Label(TitleFrame,font=("arial",47,"bold"),text="Persional Assistant")
        label.grid()    
        label.config(bg="Yellow")    
        label=Label(TitleFrame,font=("arial",10,"bold"),text=" ")
        label.grid()
        label.config(bg="Yellow")

        def AddData():
            add=Tk()
            add.title("Add Goal")
            add.geometry("950x550+1+1")
            add.iconbitmap(r"CSS.ico")
            add.config(bg="Red")
            MainFrame=Frame(add)
            MainFrame.pack()
            MainFrame.config(bg="Red")

            def AddNew():
                if(len(self.txtentryone.get())!=0):
                    Backend.AddRecord(self.txtentryone.get(),self.txtentrytwo.get(),self.txtentrythree.get(),self.txtentryfour.get(),self.txtentryfive.get(),self.txtentrysix.get())
                    AllData.delete(0,END)
                    AllData.insert(END,(self.txtentryone.get(),self.txtentrytwo.get(),self.txtentrythree.get(),self.txtentryfour.get(),self.txtentryfive.get(),self.txtentrysix.get()))

            def Search():
                    AllData.delete(0,END)
                    for row in Backend.SearchData(self.txtentryone.get(),self.txtentrytwo.get(),self.txtentrythree.get(),self.txtentryfour.get(),self.txtentryfive.get(),self.txtentrysix.get()):
                        AllData.insert(END,row,str(""))
                        AllData.delete(END,END)

            def Update():
                if(len(self.txtentryone.get())!=0):
                    Backend.DeleteData(sd[0])
                if(len(self.txtentryone.get())!=0):
                    Backend.AddRecord(self.txtentryone.get(),self.txtentrytwo.get(),self.txtentrythree.get(),self.txtentryfour.get(),self.txtentryfive.get(),self.txtentrysix.get())
                    AllData.delete(0,END)
                    AllData.insert(END,(self.txtentryone.get(),self.txtentrytwo.get(),self.txtentrythree.get(),self.txtentryfour.get(),self.txtentryfive.get(),self.txtentrysix.get()))
                    AllData.delete(END,END)
            
            def Click(Event):
                global sd
                data=AllData.curselection()[0]
                sd=AllData.get(data)
                self.txtentryone.delete(0,END)
                self.txtentryone.insert(END,sd[1])
                self.txtentrytwo.delete(0,END)
                self.txtentrytwo.insert(END,sd[2])
                self.txtentrythree.delete(0,END)
                self.txtentrythree.insert(END,sd[3])
                self.txtentryfour.delete(0,END)
                self.txtentryfour.insert(END,sd[4])
                self.txtentryfive.delete(0,END)
                self.txtentryfive.insert(END,sd[5])
                self.txtentrysix.delete(0,END)
                self.txtentrysix.insert(END,sd[6])

            def Display():
                    AllData.delete(0,END)
                    for rows in Backend.ViewData():
                        AllData.insert(END,rows,str(""))
                        AllData.delete(END,END)

            def Clear():
                self.txtentryone.delete(0,END)
                self.txtentrytwo.delete(0,END)
                self.txtentrythree.delete(0,END)
                self.txtentryfour.delete(0,END)
                self.txtentryfive.delete(0,END)
                self.txtentrysix.delete(0,END)

            def Delete():
                global sd
                data=AllData.curselection()[0]
                sd=AllData.get(data)
                if(len(self.txtentryone.get())!=0):
                    Backend.DeleteData(sd[0])
                    Clear()
                    Display()

            def OK():
                abc=Tk()
                abc.config(bg="Red")
                def cde():
                    one=self.txtentryone.get()
                    two=self.txtentrytwo.get()
                    three=self.txtentrythree.get()
                    four=self.txtentryfour.get()
                    six=self.txtentrysix.get()
                    today=(str(datetime.date.today()))
                    TYear=int(today[0:4])
                    TMonth=int(today[5:7])
                    TDate=int(today[8:10])
                    FRow=(self.txtentryfive.get())
                    Fmonth=(FRow.find("/"))
                    FMonth=int(FRow[:Fmonth])
                    Fabc=(FRow[Fmonth+1:])
                    Fdate=(Fabc.find("/"))
                    FDate=int(Fabc[:Fdate])
                    Fefg=(Fabc[Fdate+1:])
                    FYear=int(f"20{Fefg}")
                    Final=(calendar.weekday(FYear,FMonth,FDate))
                    Today=(calendar.weekday(TYear,TMonth,TDate))
                    FYear=int(Fefg)
                    print(Final)
                    print(Today)
                    # One=int(self.txtentryfive.get())
                    # Two=int(self.txtentrysix.get())
                    # print(self.txtentryfive)
                    if button1.get() == "Yes" :
                        if Final == 0:
                            left=(f"{FMonth}/{FDate+7}/{FYear}")
                            if left <= self.txtentrysix.get():
                                self.txtentryone.delete(0,END)
                                self.txtentryone.insert(END,one)
                                self.txtentrytwo.delete(0,END)
                                self.txtentrytwo.insert(END,two)
                                self.txtentrythree.delete(0,END)
                                self.txtentrythree.insert(END,three)
                                self.txtentryfour.delete(0,END)
                                self.txtentryfour.insert(END,four)
                                self.txtentryfive.delete(0,END)
                                self.txtentryfive.insert(END,left)
                                self.txtentrysix.delete(0,END)
                                self.txtentrysix.insert(END,six)
                                AddNew()
                        if Final == 1:
                            left=(f"{FMonth}/{FDate+6}/{FYear}")
                            if left <= self.txtentrysix.get():
                                self.txtentryone.delete(0,END)
                                self.txtentryone.insert(END,one)
                                self.txtentrytwo.delete(0,END)
                                self.txtentrytwo.insert(END,two)
                                self.txtentrythree.delete(0,END)
                                self.txtentrythree.insert(END,three)
                                self.txtentryfour.delete(0,END)
                                self.txtentryfour.insert(END,four)
                                self.txtentrysix.delete(0,END)
                                self.txtentrysix.insert(END,six)
                                AddNew()
                        if Final == 2:
                            left=(f"{FMonth}/{FDate+5}/{FYear}")
                            if left <= self.txtentrysix.get():
                                self.txtentryone.delete(0,END)
                                self.txtentryone.insert(END,one)
                                self.txtentrytwo.delete(0,END)
                                self.txtentrytwo.insert(END,two)
                                self.txtentrythree.delete(0,END)
                                self.txtentrythree.insert(END,three)
                                self.txtentryfour.delete(0,END)
                                self.txtentryfour.insert(END,four)
                                self.txtentryfive.delete(0,END)
                                self.txtentryfive.insert(END,left)
                                self.txtentrysix.delete(0,END)
                                self.txtentrysix.insert(END,six)
                                AddNew()
                        if Final == 3:
                            left=(f"{FMonth}/{FDate+4}/{FYear}")
                            if left <= self.txtentrysix.get():
                                self.txtentryone.delete(0,END)
                                self.txtentryone.insert(END,one)
                                self.txtentrytwo.delete(0,END)
                                self.txtentrytwo.insert(END,two)
                                self.txtentrythree.delete(0,END)
                                self.txtentrythree.insert(END,three)
                                self.txtentryfour.delete(0,END)
                                self.txtentryfour.insert(END,four)
                                self.txtentryfive.delete(0,END)
                                self.txtentryfive.insert(END,left)
                                self.txtentrysix.delete(0,END)
                                self.txtentrysix.insert(END,six)
                                AddNew()
                        if Final == 4:
                            left=(f"{FMonth}/{FDate+3}/{FYear}")
                            if left <= self.txtentrysix.get():
                                self.txtentryone.delete(0,END)
                                self.txtentryone.insert(END,one)
                                self.txtentrytwo.delete(0,END)
                                self.txtentrytwo.insert(END,two)
                                self.txtentrythree.delete(0,END)
                                self.txtentrythree.insert(END,three)
                                self.txtentryfour.delete(0,END)
                                self.txtentryfour.insert(END,four)
                                self.txtentryfive.delete(0,END)
                                self.txtentryfive.insert(END,left)
                                self.txtentrysix.delete(0,END)
                                self.txtentrysix.insert(END,six)
                                AddNew()
                        if Final == 5:
                            left=(f"{FMonth}/{FDate+2}/{FYear}")
                            if left <= self.txtentrysix.get():
                                self.txtentryone.delete(0,END)
                                self.txtentryone.insert(END,one)
                                self.txtentrytwo.delete(0,END)
                                self.txtentrytwo.insert(END,two)
                                self.txtentrythree.delete(0,END)
                                self.txtentrythree.insert(END,three)
                                self.txtentryfour.delete(0,END)
                                self.txtentryfour.insert(END,four)
                                self.txtentryfive.delete(0,END)
                                self.txtentryfive.insert(END,left)
                                self.txtentrysix.delete(0,END)
                                self.txtentrysix.insert(END,six)
                                AddNew()
                        if Final == 6:
                            left=(f"{FMonth}/{FDate+1}/{FYear}")
                            if left <= self.txtentrysix.get():
                                self.txtentryone.delete(0,END)
                                self.txtentryone.insert(END,one)
                                self.txtentrytwo.delete(0,END)
                                self.txtentrytwo.insert(END,two)
                                self.txtentrythree.delete(0,END)
                                self.txtentrythree.insert(END,three)
                                self.txtentryfour.delete(0,END)
                                self.txtentryfour.insert(END,four)
                                self.txtentryfive.delete(0,END)
                                self.txtentryfive.insert(END,left)
                                self.txtentrysix.delete(0,END)
                                self.txtentrysix.insert(END,six)
                                AddNew()
                    if button2.get() == "Yes" :
                        if Final == 0:
                            left=(f"{FMonth}/{FDate+1}/{FYear}")
                            if left <= self.txtentrysix.get():
                                self.txtentryone.delete(0,END)
                                self.txtentryone.insert(END,one)
                                self.txtentrytwo.delete(0,END)
                                self.txtentrytwo.insert(END,two)
                                self.txtentrythree.delete(0,END)
                                self.txtentrythree.insert(END,three)
                                self.txtentryfour.delete(0,END)
                                self.txtentryfour.insert(END,four)
                                self.txtentryfive.delete(0,END)
                                self.txtentryfive.insert(END,left)
                                self.txtentrysix.delete(0,END)
                                self.txtentrysix.insert(END,six)
                                AddNew()
                        if Final == 1:
                            left=(f"{FMonth}/{FDate+7}/{FYear}")
                            if left <= self.txtentrysix.get():
                                self.txtentryone.delete(0,END)
                                self.txtentryone.insert(END,one)
                                self.txtentrytwo.delete(0,END)
                                self.txtentrytwo.insert(END,two)
                                self.txtentrythree.delete(0,END)
                                self.txtentrythree.insert(END,three)
                                self.txtentryfour.delete(0,END)
                                self.txtentryfour.insert(END,four)
                                self.txtentryfive.delete(0,END)
                                self.txtentryfive.insert(END,left)
                                self.txtentrysix.delete(0,END)
                                self.txtentrysix.insert(END,six)
                                AddNew()
                        if Final == 2:
                            left=(f"{FMonth}/{FDate+6}/{FYear}")
                            if left <= self.txtentrysix.get():
                                self.txtentryone.delete(0,END)
                                self.txtentryone.insert(END,one)
                                self.txtentrytwo.delete(0,END)
                                self.txtentrytwo.insert(END,two)
                                self.txtentrythree.delete(0,END)
                                self.txtentrythree.insert(END,three)
                                self.txtentryfour.delete(0,END)
                                self.txtentryfour.insert(END,four)
                                self.txtentryfive.delete(0,END)
                                self.txtentryfive.insert(END,left)
                                self.txtentrysix.delete(0,END)
                                self.txtentrysix.insert(END,six)
                                AddNew()
                        if Final == 3:
                            left=(f"{FMonth}/{FDate+5}/{FYear}")
                            if left <= self.txtentrysix.get():
                                self.txtentryone.delete(0,END)
                                self.txtentryone.insert(END,one)
                                self.txtentrytwo.delete(0,END)
                                self.txtentrytwo.insert(END,two)
                                self.txtentrythree.delete(0,END)
                                self.txtentrythree.insert(END,three)
                                self.txtentryfour.delete(0,END)
                                self.txtentryfour.insert(END,four)
                                self.txtentryfive.delete(0,END)
                                self.txtentryfive.insert(END,left)
                                self.txtentrysix.delete(0,END)
                                self.txtentrysix.insert(END,six)
                                AddNew()
                        if Final == 4:
                            left=(f"{FMonth}/{FDate+4}/{FYear}")
                            if left <= self.txtentrysix.get():
                                self.txtentryone.delete(0,END)
                                self.txtentryone.insert(END,one)
                                self.txtentrytwo.delete(0,END)
                                self.txtentrytwo.insert(END,two)
                                self.txtentrythree.delete(0,END)
                                self.txtentrythree.insert(END,three)
                                self.txtentryfour.delete(0,END)
                                self.txtentryfour.insert(END,four)
                                self.txtentryfive.delete(0,END)
                                self.txtentryfive.insert(END,left)
                                self.txtentrysix.delete(0,END)
                                self.txtentrysix.insert(END,six)
                                AddNew()
                        if Final == 5:
                            left=(f"{FMonth}/{FDate+3}/{FYear}")
                            if left <= self.txtentrysix.get():
                                self.txtentryone.delete(0,END)
                                self.txtentryone.insert(END,one)
                                self.txtentrytwo.delete(0,END)
                                self.txtentrytwo.insert(END,two)
                                self.txtentrythree.delete(0,END)
                                self.txtentrythree.insert(END,three)
                                self.txtentryfour.delete(0,END)
                                self.txtentryfour.insert(END,four)
                                self.txtentryfive.delete(0,END)
                                self.txtentryfive.insert(END,left)
                                self.txtentrysix.delete(0,END)
                                self.txtentrysix.insert(END,six)
                                AddNew()
                        if Final == 6:
                            left=(f"{FMonth}/{FDate+2}/{FYear}")
                            if left <= self.txtentrysix.get():
                                self.txtentryone.delete(0,END)
                                self.txtentryone.insert(END,one)
                                self.txtentrytwo.delete(0,END)
                                self.txtentrytwo.insert(END,two)
                                self.txtentrythree.delete(0,END)
                                self.txtentrythree.insert(END,three)
                                self.txtentryfour.delete(0,END)
                                self.txtentryfour.insert(END,four)
                                self.txtentryfive.delete(0,END)
                                self.txtentryfive.insert(END,left)
                                self.txtentrysix.delete(0,END)
                                self.txtentrysix.insert(END,six)
                                AddNew()
                    if button3.get() == "Yes" :
                        if Final == 0:
                            left=(f"{FMonth}/{FDate+2}/{FYear}")
                            if left <= self.txtentrysix.get():
                                self.txtentryone.delete(0,END)
                                self.txtentryone.insert(END,one)
                                self.txtentrytwo.delete(0,END)
                                self.txtentrytwo.insert(END,two)
                                self.txtentrythree.delete(0,END)
                                self.txtentrythree.insert(END,three)
                                self.txtentryfour.delete(0,END)
                                self.txtentryfour.insert(END,four)
                                self.txtentryfive.delete(0,END)
                                self.txtentryfive.insert(END,left)
                                self.txtentrysix.delete(0,END)
                                self.txtentrysix.insert(END,six)
                                AddNew()
                        if Final == 1:
                            left=(f"{FMonth}/{FDate+1}/{FYear}")
                            if left <= self.txtentrysix.get():
                                self.txtentryone.delete(0,END)
                                self.txtentryone.insert(END,one)
                                self.txtentrytwo.delete(0,END)
                                self.txtentrytwo.insert(END,two)
                                self.txtentrythree.delete(0,END)
                                self.txtentrythree.insert(END,three)
                                self.txtentryfour.delete(0,END)
                                self.txtentryfour.insert(END,four)
                                self.txtentryfive.delete(0,END)
                                self.txtentryfive.insert(END,left)
                                self.txtentrysix.delete(0,END)
                                self.txtentrysix.insert(END,six)
                                AddNew()
                        if Final == 2:
                            left=(f"{FMonth}/{FDate+7}/{FYear}")
                            if left <= self.txtentrysix.get():
                                self.txtentryone.delete(0,END)
                                self.txtentryone.insert(END,one)
                                self.txtentrytwo.delete(0,END)
                                self.txtentrytwo.insert(END,two)
                                self.txtentrythree.delete(0,END)
                                self.txtentrythree.insert(END,three)
                                self.txtentryfour.delete(0,END)
                                self.txtentryfour.insert(END,four)
                                self.txtentryfive.delete(0,END)
                                self.txtentryfive.insert(END,left)
                                self.txtentrysix.delete(0,END)
                                self.txtentrysix.insert(END,six)
                                AddNew()
                        if Final == 3:
                            left=(f"{FMonth}/{FDate+6}/{FYear}")
                            if left <= self.txtentrysix.get():
                                self.txtentryone.delete(0,END)
                                self.txtentryone.insert(END,one)
                                self.txtentrytwo.delete(0,END)
                                self.txtentrytwo.insert(END,two)
                                self.txtentrythree.delete(0,END)
                                self.txtentrythree.insert(END,three)
                                self.txtentryfour.delete(0,END)
                                self.txtentryfour.insert(END,four)
                                self.txtentryfive.delete(0,END)
                                self.txtentryfive.insert(END,left)
                                self.txtentrysix.delete(0,END)
                                self.txtentrysix.insert(END,six)
                                AddNew()
                        if Final == 4:
                            left=(f"{FMonth}/{FDate+5}/{FYear}")
                            if left <= self.txtentrysix.get():
                                self.txtentryone.delete(0,END)
                                self.txtentryone.insert(END,one)
                                self.txtentrytwo.delete(0,END)
                                self.txtentrytwo.insert(END,two)
                                self.txtentrythree.delete(0,END)
                                self.txtentrythree.insert(END,three)
                                self.txtentryfour.delete(0,END)
                                self.txtentryfour.insert(END,four)
                                self.txtentryfive.delete(0,END)
                                self.txtentryfive.insert(END,left)
                                self.txtentrysix.delete(0,END)
                                self.txtentrysix.insert(END,six)
                                AddNew()
                        if Final == 5:
                            left=(f"{FMonth}/{FDate+4}/{FYear}")
                            if left <= self.txtentrysix.get():
                                self.txtentryone.delete(0,END)
                                self.txtentryone.insert(END,one)
                                self.txtentrytwo.delete(0,END)
                                self.txtentrytwo.insert(END,two)
                                self.txtentrythree.delete(0,END)
                                self.txtentrythree.insert(END,three)
                                self.txtentryfour.delete(0,END)
                                self.txtentryfour.insert(END,four)
                                self.txtentryfive.delete(0,END)
                                self.txtentryfive.insert(END,left)
                                self.txtentrysix.delete(0,END)
                                self.txtentrysix.insert(END,six)
                                AddNew()
                        if Final == 6:
                            left=(f"{FMonth}/{FDate+3}/{FYear}")
                            if left <= self.txtentrysix.get():
                                self.txtentryone.delete(0,END)
                                self.txtentryone.insert(END,one)
                                self.txtentrytwo.delete(0,END)
                                self.txtentrytwo.insert(END,two)
                                self.txtentrythree.delete(0,END)
                                self.txtentrythree.insert(END,three)
                                self.txtentryfour.delete(0,END)
                                self.txtentryfour.insert(END,four)
                                self.txtentryfive.delete(0,END)
                                self.txtentryfive.insert(END,left)
                                self.txtentrysix.delete(0,END)
                                self.txtentrysix.insert(END,six)
                                AddNew()
                    if button4.get() == "Yes" :
                        if Final == 0:
                            left=(f"{FMonth}/{FDate+3}/{FYear}")
                            if left <= self.txtentrysix.get():
                                self.txtentryone.delete(0,END)
                                self.txtentryone.insert(END,one)
                                self.txtentrytwo.delete(0,END)
                                self.txtentrytwo.insert(END,two)
                                self.txtentrythree.delete(0,END)
                                self.txtentrythree.insert(END,three)
                                self.txtentryfour.delete(0,END)
                                self.txtentryfour.insert(END,four)
                                self.txtentryfive.delete(0,END)
                                self.txtentryfive.insert(END,left)
                                self.txtentrysix.delete(0,END)
                                self.txtentrysix.insert(END,six)
                                AddNew()
                        if Final == 1:
                            left=(f"{FMonth}/{FDate+2}/{FYear}")
                            if left <= self.txtentrysix.get():
                                self.txtentryone.delete(0,END)
                                self.txtentryone.insert(END,one)
                                self.txtentrytwo.delete(0,END)
                                self.txtentrytwo.insert(END,two)
                                self.txtentrythree.delete(0,END)
                                self.txtentrythree.insert(END,three)
                                self.txtentryfour.delete(0,END)
                                self.txtentryfour.insert(END,four)
                                self.txtentryfive.delete(0,END)
                                self.txtentryfive.insert(END,left)
                                self.txtentrysix.delete(0,END)
                                self.txtentrysix.insert(END,six)
                                AddNew()
                        if Final == 2:
                            left=(f"{FMonth}/{FDate+1}/{FYear}")
                            if left <= self.txtentrysix.get():
                                self.txtentryone.delete(0,END)
                                self.txtentryone.insert(END,one)
                                self.txtentrytwo.delete(0,END)
                                self.txtentrytwo.insert(END,two)
                                self.txtentrythree.delete(0,END)
                                self.txtentrythree.insert(END,three)
                                self.txtentryfour.delete(0,END)
                                self.txtentryfour.insert(END,four)
                                self.txtentryfive.delete(0,END)
                                self.txtentryfive.insert(END,left)
                                self.txtentrysix.delete(0,END)
                                self.txtentrysix.insert(END,six)
                                AddNew()
                        if Final == 3:
                            left=(f"{FMonth}/{FDate+7}/{FYear}")
                            if left <= self.txtentrysix.get():
                                self.txtentryone.delete(0,END)
                                self.txtentryone.insert(END,one)
                                self.txtentrytwo.delete(0,END)
                                self.txtentrytwo.insert(END,two)
                                self.txtentrythree.delete(0,END)
                                self.txtentrythree.insert(END,three)
                                self.txtentryfour.delete(0,END)
                                self.txtentryfour.insert(END,four)
                                self.txtentryfive.delete(0,END)
                                self.txtentryfive.insert(END,left)
                                self.txtentrysix.delete(0,END)
                                self.txtentrysix.insert(END,six)
                                AddNew()
                        if Final == 4:
                            left=(f"{FMonth}/{FDate+6}/{FYear}")
                            if left <= self.txtentrysix.get():
                                self.txtentryone.delete(0,END)
                                self.txtentryone.insert(END,one)
                                self.txtentrytwo.delete(0,END)
                                self.txtentrytwo.insert(END,two)
                                self.txtentrythree.delete(0,END)
                                self.txtentrythree.insert(END,three)
                                self.txtentryfour.delete(0,END)
                                self.txtentryfour.insert(END,four)
                                self.txtentryfive.delete(0,END)
                                self.txtentryfive.insert(END,left)
                                self.txtentrysix.delete(0,END)
                                self.txtentrysix.insert(END,six)
                                AddNew()
                        if Final == 5:
                            left=(f"{FMonth}/{FDate+5}/{FYear}")
                            if left <= self.txtentrysix.get():
                                self.txtentryone.delete(0,END)
                                self.txtentryone.insert(END,one)
                                self.txtentrytwo.delete(0,END)
                                self.txtentrytwo.insert(END,two)
                                self.txtentrythree.delete(0,END)
                                self.txtentrythree.insert(END,three)
                                self.txtentryfour.delete(0,END)
                                self.txtentryfour.insert(END,four)
                                self.txtentryfive.delete(0,END)
                                self.txtentryfive.insert(END,left)
                                self.txtentrysix.delete(0,END)
                                self.txtentrysix.insert(END,six)
                                AddNew()
                        if Final == 6:
                            left=(f"{FMonth}/{FDate+4}/{FYear}")
                            if left <= self.txtentrysix.get():
                                self.txtentryone.delete(0,END)
                                self.txtentryone.insert(END,one)
                                self.txtentrytwo.delete(0,END)
                                self.txtentrytwo.insert(END,two)
                                self.txtentrythree.delete(0,END)
                                self.txtentrythree.insert(END,three)
                                self.txtentryfour.delete(0,END)
                                self.txtentryfour.insert(END,four)
                                self.txtentryfive.delete(0,END)
                                self.txtentryfive.insert(END,left)
                                self.txtentrysix.delete(0,END)
                                self.txtentrysix.insert(END,six)
                                AddNew()
                    if button5.get() == "Yes" :
                        if Final == 0:
                            left=(f"{FMonth}/{FDate+4}/{FYear}")
                            if left <= self.txtentrysix.get():
                                self.txtentryone.delete(0,END)
                                self.txtentryone.insert(END,one)
                                self.txtentrytwo.delete(0,END)
                                self.txtentrytwo.insert(END,two)
                                self.txtentrythree.delete(0,END)
                                self.txtentrythree.insert(END,three)
                                self.txtentryfour.delete(0,END)
                                self.txtentryfour.insert(END,four)
                                self.txtentryfive.delete(0,END)
                                self.txtentryfive.insert(END,left)
                                self.txtentrysix.delete(0,END)
                                self.txtentrysix.insert(END,six)
                                AddNew()
                        if Final == 1:
                            left=(f"{FMonth}/{FDate+3}/{FYear}")
                            if left <= self.txtentrysix.get():
                                self.txtentryone.delete(0,END)
                                self.txtentryone.insert(END,one)
                                self.txtentrytwo.delete(0,END)
                                self.txtentrytwo.insert(END,two)
                                self.txtentrythree.delete(0,END)
                                self.txtentrythree.insert(END,three)
                                self.txtentryfour.delete(0,END)
                                self.txtentryfour.insert(END,four)
                                self.txtentryfive.delete(0,END)
                                self.txtentryfive.insert(END,left)
                                self.txtentrysix.delete(0,END)
                                self.txtentrysix.insert(END,six)
                                AddNew()
                        if Final == 2:
                            left=(f"{FMonth}/{FDate+2}/{FYear}")
                            if left <= self.txtentrysix.get():
                                self.txtentryone.delete(0,END)
                                self.txtentryone.insert(END,one)
                                self.txtentrytwo.delete(0,END)
                                self.txtentrytwo.insert(END,two)
                                self.txtentrythree.delete(0,END)
                                self.txtentrythree.insert(END,three)
                                self.txtentryfour.delete(0,END)
                                self.txtentryfour.insert(END,four)
                                self.txtentryfive.delete(0,END)
                                self.txtentryfive.insert(END,left)
                                self.txtentrysix.delete(0,END)
                                self.txtentrysix.insert(END,six)
                                AddNew()
                        if Final == 3:
                            left=(f"{FMonth}/{FDate+1}/{FYear}")
                            if left <= self.txtentrysix.get():
                                self.txtentryone.delete(0,END)
                                self.txtentryone.insert(END,one)
                                self.txtentrytwo.delete(0,END)
                                self.txtentrytwo.insert(END,two)
                                self.txtentrythree.delete(0,END)
                                self.txtentrythree.insert(END,three)
                                self.txtentryfour.delete(0,END)
                                self.txtentryfour.insert(END,four)
                                self.txtentryfive.delete(0,END)
                                self.txtentryfive.insert(END,left)
                                self.txtentrysix.delete(0,END)
                                self.txtentrysix.insert(END,six)
                                AddNew()
                        if Final == 4:
                            left=(f"{FMonth}/{FDate+7}/{FYear}")
                            if left <= self.txtentrysix.get():
                                self.txtentryone.delete(0,END)
                                self.txtentryone.insert(END,one)
                                self.txtentrytwo.delete(0,END)
                                self.txtentrytwo.insert(END,two)
                                self.txtentrythree.delete(0,END)
                                self.txtentrythree.insert(END,three)
                                self.txtentryfour.delete(0,END)
                                self.txtentryfour.insert(END,four)
                                self.txtentryfive.delete(0,END)
                                self.txtentryfive.insert(END,left)
                                self.txtentrysix.delete(0,END)
                                self.txtentrysix.insert(END,six)
                                AddNew()
                        if Final == 5:
                            left=(f"{FMonth}/{FDate+6}/{FYear}")
                            if left <= self.txtentrysix.get():
                                self.txtentryone.delete(0,END)
                                self.txtentryone.insert(END,one)
                                self.txtentrytwo.delete(0,END)
                                self.txtentrytwo.insert(END,two)
                                self.txtentrythree.delete(0,END)
                                self.txtentrythree.insert(END,three)
                                self.txtentryfour.delete(0,END)
                                self.txtentryfour.insert(END,four)
                                self.txtentryfive.delete(0,END)
                                self.txtentryfive.insert(END,left)
                                self.txtentrysix.delete(0,END)
                                self.txtentrysix.insert(END,six)
                                AddNew()
                        if Final == 6:
                            left=(f"{FMonth}/{FDate+5}/{FYear}")
                            if left <= self.txtentrysix.get():
                                self.txtentryone.delete(0,END)
                                self.txtentryone.insert(END,one)
                                self.txtentrytwo.delete(0,END)
                                self.txtentrytwo.insert(END,two)
                                self.txtentrythree.delete(0,END)
                                self.txtentrythree.insert(END,three)
                                self.txtentryfour.delete(0,END)
                                self.txtentryfour.insert(END,four)
                                self.txtentryfive.delete(0,END)
                                self.txtentryfive.insert(END,left)
                                self.txtentrysix.delete(0,END)
                                self.txtentrysix.insert(END,six)
                                AddNew()
                    if button6.get() == "Yes" :
                        if Final == 0:
                            left=(f"{FMonth}/{FDate+5}/{FYear}")
                            if left <= self.txtentrysix.get():
                                self.txtentryone.delete(0,END)
                                self.txtentryone.insert(END,one)
                                self.txtentrytwo.delete(0,END)
                                self.txtentrytwo.insert(END,two)
                                self.txtentrythree.delete(0,END)
                                self.txtentrythree.insert(END,three)
                                self.txtentryfour.delete(0,END)
                                self.txtentryfour.insert(END,four)
                                self.txtentryfive.delete(0,END)
                                self.txtentryfive.insert(END,left)
                                self.txtentrysix.delete(0,END)
                                self.txtentrysix.insert(END,six)
                                AddNew()
                        if Final == 1:
                            left=(f"{FMonth}/{FDate+4}/{FYear}")
                            if left <= self.txtentrysix.get():
                                self.txtentryone.delete(0,END)
                                self.txtentryone.insert(END,one)
                                self.txtentrytwo.delete(0,END)
                                self.txtentrytwo.insert(END,two)
                                self.txtentrythree.delete(0,END)
                                self.txtentrythree.insert(END,three)
                                self.txtentryfour.delete(0,END)
                                self.txtentryfour.insert(END,four)
                                self.txtentryfive.delete(0,END)
                                self.txtentryfive.insert(END,left)
                                self.txtentrysix.delete(0,END)
                                self.txtentrysix.insert(END,six)
                                AddNew()
                        if Final == 2:
                            left=(f"{FMonth}/{FDate+3}/{FYear}")
                            if left <= self.txtentrysix.get():
                                self.txtentryone.delete(0,END)
                                self.txtentryone.insert(END,one)
                                self.txtentrytwo.delete(0,END)
                                self.txtentrytwo.insert(END,two)
                                self.txtentrythree.delete(0,END)
                                self.txtentrythree.insert(END,three)
                                self.txtentryfour.delete(0,END)
                                self.txtentryfour.insert(END,four)
                                self.txtentryfive.delete(0,END)
                                self.txtentryfive.insert(END,left)
                                self.txtentrysix.delete(0,END)
                                self.txtentrysix.insert(END,six)
                                AddNew()
                        if Final == 3:
                            left=(f"{FMonth}/{FDate+2}/{FYear}")
                            if left <= self.txtentrysix.get():
                                self.txtentryone.delete(0,END)
                                self.txtentryone.insert(END,one)
                                self.txtentrytwo.delete(0,END)
                                self.txtentrytwo.insert(END,two)
                                self.txtentrythree.delete(0,END)
                                self.txtentrythree.insert(END,three)
                                self.txtentryfour.delete(0,END)
                                self.txtentryfour.insert(END,four)
                                self.txtentryfive.delete(0,END)
                                self.txtentryfive.insert(END,left)
                                self.txtentrysix.delete(0,END)
                                self.txtentrysix.insert(END,six)
                                AddNew()
                        if Final == 4:
                            left=(f"{FMonth}/{FDate+1}/{FYear}")
                            if left <= self.txtentrysix.get():
                                self.txtentryone.delete(0,END)
                                self.txtentryone.insert(END,one)
                                self.txtentrytwo.delete(0,END)
                                self.txtentrytwo.insert(END,two)
                                self.txtentrythree.delete(0,END)
                                self.txtentrythree.insert(END,three)
                                self.txtentryfour.delete(0,END)
                                self.txtentryfour.insert(END,four)
                                self.txtentryfive.delete(0,END)
                                self.txtentryfive.insert(END,left)
                                self.txtentrysix.delete(0,END)
                                self.txtentrysix.insert(END,six)
                                AddNew()
                        if Final == 5:
                            left=(f"{FMonth}/{FDate+7}/{FYear}")
                            if left <= self.txtentrysix.get():
                                self.txtentryone.delete(0,END)
                                self.txtentryone.insert(END,one)
                                self.txtentrytwo.delete(0,END)
                                self.txtentrytwo.insert(END,two)
                                self.txtentrythree.delete(0,END)
                                self.txtentrythree.insert(END,three)
                                self.txtentryfour.delete(0,END)
                                self.txtentryfour.insert(END,four)
                                self.txtentryfive.delete(0,END)
                                self.txtentryfive.insert(END,left)
                                self.txtentrysix.delete(0,END)
                                self.txtentrysix.insert(END,six)
                                AddNew()
                        if Final == 6:
                            left=(f"{FMonth}/{FDate+6}/{FYear}")
                            if left <= self.txtentrysix.get():
                                self.txtentryone.delete(0,END)
                                self.txtentryone.insert(END,one)
                                self.txtentrytwo.delete(0,END)
                                self.txtentrytwo.insert(END,two)
                                self.txtentrythree.delete(0,END)
                                self.txtentrythree.insert(END,three)
                                self.txtentryfour.delete(0,END)
                                self.txtentryfour.insert(END,four)
                                self.txtentryfive.delete(0,END)
                                self.txtentryfive.insert(END,left)
                                self.txtentrysix.delete(0,END)
                                self.txtentrysix.insert(END,six)
                                AddNew()
                    if button7.get() == "Yes" :
                        if Final == 0:
                            left=(f"{FMonth}/{FDate+6}/{FYear}")
                            if left <= self.txtentrysix.get():
                                self.txtentryone.delete(0,END)
                                self.txtentryone.insert(END,one)
                                self.txtentrytwo.delete(0,END)
                                self.txtentrytwo.insert(END,two)
                                self.txtentrythree.delete(0,END)
                                self.txtentrythree.insert(END,three)
                                self.txtentryfour.delete(0,END)
                                self.txtentryfour.insert(END,four)
                                self.txtentryfive.delete(0,END)
                                self.txtentryfive.insert(END,left)
                                self.txtentrysix.delete(0,END)
                                self.txtentrysix.insert(END,six)
                                AddNew()
                        if Final == 1:
                            left=(f"{FMonth}/{FDate+5}/{FYear}")
                            if left <= self.txtentrysix.get():
                                self.txtentryone.delete(0,END)
                                self.txtentryone.insert(END,one)
                                self.txtentrytwo.delete(0,END)
                                self.txtentrytwo.insert(END,two)
                                self.txtentrythree.delete(0,END)
                                self.txtentrythree.insert(END,three)
                                self.txtentryfour.delete(0,END)
                                self.txtentryfour.insert(END,four)
                                self.txtentryfive.delete(0,END)
                                self.txtentryfive.insert(END,left)
                                self.txtentrysix.delete(0,END)
                                self.txtentrysix.insert(END,six)
                                AddNew()
                        if Final == 2:
                            left=(f"{FMonth}/{FDate+4}/{FYear}")
                            if left <= self.txtentrysix.get():
                                self.txtentryone.delete(0,END)
                                self.txtentryone.insert(END,one)
                                self.txtentrytwo.delete(0,END)
                                self.txtentrytwo.insert(END,two)
                                self.txtentrythree.delete(0,END)
                                self.txtentrythree.insert(END,three)
                                self.txtentryfour.delete(0,END)
                                self.txtentryfour.insert(END,four)
                                self.txtentryfive.delete(0,END)
                                self.txtentryfive.insert(END,left)
                                self.txtentrysix.delete(0,END)
                                self.txtentrysix.insert(END,six)
                                AddNew()
                        if Final == 3:
                            left=(f"{FMonth}/{FDate+3}/{FYear}")
                            if left <= self.txtentrysix.get():
                                self.txtentryone.delete(0,END)
                                self.txtentryone.insert(END,one)
                                self.txtentrytwo.delete(0,END)
                                self.txtentrytwo.insert(END,two)
                                self.txtentrythree.delete(0,END)
                                self.txtentrythree.insert(END,three)
                                self.txtentryfour.delete(0,END)
                                self.txtentryfour.insert(END,four)
                                self.txtentryfive.delete(0,END)
                                self.txtentryfive.insert(END,left)
                                self.txtentrysix.delete(0,END)
                                self.txtentrysix.insert(END,six)
                                AddNew()
                        if Final == 4:
                            left=(f"{FMonth}/{FDate+2}/{FYear}")
                            if left <= self.txtentrysix.get():
                                self.txtentryone.delete(0,END)
                                self.txtentryone.insert(END,one)
                                self.txtentrytwo.delete(0,END)
                                self.txtentrytwo.insert(END,two)
                                self.txtentrythree.delete(0,END)
                                self.txtentrythree.insert(END,three)
                                self.txtentryfour.delete(0,END)
                                self.txtentryfour.insert(END,four)
                                self.txtentryfive.delete(0,END)
                                self.txtentryfive.insert(END,left)
                                self.txtentrysix.delete(0,END)
                                self.txtentrysix.insert(END,six)
                                AddNew()
                        if Final == 5:
                            left=(f"{FMonth}/{FDate+1}/{FYear}")
                            if left <= self.txtentrysix.get():
                                self.txtentryone.delete(0,END)
                                self.txtentryone.insert(END,one)
                                self.txtentrytwo.delete(0,END)
                                self.txtentrytwo.insert(END,two)
                                self.txtentrythree.delete(0,END)
                                self.txtentrythree.insert(END,three)
                                self.txtentryfour.delete(0,END)
                                self.txtentryfour.insert(END,four)
                                self.txtentryfive.delete(0,END)
                                self.txtentryfive.insert(END,left)
                                self.txtentrysix.delete(0,END)
                                self.txtentrysix.insert(END,six)
                                AddNew()
                        if Final == 6:
                            left=(f"{FMonth}/{FDate+7}/{FYear}")
                            if left <= self.txtentrysix.get():
                                self.txtentryone.delete(0,END)
                                self.txtentryone.insert(END,one)
                                self.txtentrytwo.delete(0,END)
                                self.txtentrytwo.insert(END,two)
                                self.txtentrythree.delete(0,END)
                                self.txtentrythree.insert(END,three)
                                self.txtentryfour.delete(0,END)
                                self.txtentryfour.insert(END,four)
                                self.txtentryfive.delete(0,END)
                                self.txtentryfive.insert(END,left)
                                self.txtentrysix.delete(0,END)
                                self.txtentrysix.insert(END,six)
                                AddNew()
                    # abc.destroy()

                DataFrame=Frame(abc)
                DataFrame.pack()
                DataFrame.config(bg="Red")
                label=Label(DataFrame,font=("arial",10,"bold"),width=10,fg="Blue",text="Monday")
                label.grid(row=0,column=0)
                label.config(bg="Red")
                button1=ttk.Combobox(DataFrame,text="Monday" ,width=5,state="readonly")
                button1.grid(row=1,column=0)
                button1["values"]=("No","Yes")
                button1.current(0)
                label=Label(DataFrame,font=("arial",10,"bold"),width=10,fg="Blue",text="Tuesday")
                label.grid(row=0,column=1)
                label.config(bg="Red")
                button2=ttk.Combobox(DataFrame, text="Tuesday",width=5,state="readonly")
                button2.grid(row=1,column=1)
                button2["values"]=("No","Yes")
                button2.current(0)
                label=Label(DataFrame,font=("arial",10,"bold"),width=10,fg="Blue",text="Wednesday")
                label.grid(row=0,column=2)
                label.config(bg="Red")
                button3=ttk.Combobox(DataFrame, text="Wednesday",width=5,state="readonly")
                button3.grid(row=1,column=2)
                button3["values"]=("No","Yes")
                button3.current(0)
                label=Label(DataFrame,font=("arial",10,"bold"),width=10,fg="Blue",text="Thursday")
                label.grid(row=0,column=3)
                label.config(bg="Red")
                button4=ttk.Combobox(DataFrame, text="Thursday",width=5,state="readonly")
                button4.grid(row=1,column=3)
                button4["values"]=("No","Yes")
                button4.current(0)
                label=Label(DataFrame,font=("arial",10,"bold"),width=10,fg="Blue",text="Friday")
                label.grid(row=0,column=4)
                label.config(bg="Red")
                button5=ttk.Combobox(DataFrame, text="Friday",width=5,state="readonly")
                button5.grid(row=1,column=4)
                button5["values"]=("No","Yes")
                button5.current(0)
                label=Label(DataFrame,font=("arial",10,"bold"),width=10,fg="Blue",text="Saturday")
                label.grid(row=0,column=5)
                label.config(bg="Red")
                button6=ttk.Combobox(DataFrame, text="Saturday",width=5,state="readonly")
                button6.grid(row=1,column=5)
                button6["values"]=("No","Yes")
                button6.current(0)
                label=Label(DataFrame,font=("arial",10,"bold"),width=10,fg="Blue",text="Sunday")
                label.grid(row=0,column=6)
                label.config(bg="Red")
                button7=ttk.Combobox(DataFrame, text="Sunday",width=5,state="readonly")
                button7["values"]=("No","Yes")
                button7.current(0)
                button7.grid(row=1,column=6)
                label=Label(DataFrame,font=("arial",10,"bold"),width=10,fg="Blue",text="    ")
                label.grid(row=2,column=6)
                label.config(bg="Red")
                button=Button(DataFrame,text="Select",font=("arial",10,"bold"),bd=10,padx=2,pady=2,width=8)
                button.grid(row=3,columnspan=7)
                button.config(bg="Blue",command=cde)

            TitleFrame=Frame(MainFrame)
            TitleFrame.pack(side=TOP)
            TitleFrame.config(bg="Red")
            label=Label(TitleFrame,font=("arial",47,"bold"),fg="Blue",text="Persional Assistant")
            label.grid()
            label.config(bg="Red")

            DataFrame=Frame(MainFrame)
            DataFrame.pack()
            DataFrame.config(bg="Red")
            self.Label=Label(DataFrame,font=("arial",15,"bold"),bd=5,padx=2,pady=2,text="Major Goal")
            self.Label.grid(row=0,column=0,sticky=W)
            self.Label.config(bg="Red")
            self.Space=Label(DataFrame,text="           ")
            self.Space.grid(row=0,column=1)
            self.Space.config(bg="Red")
            self.Hash=Label(DataFrame,text="#",font=("arial",15,"bold"))
            self.Hash.grid(row=0,column=2)
            self.Hash.config(bg="Red")
            self.txtentryone=Entry(DataFrame,font=("arial",15,"bold"),bd=5,width=42,textvariable=MainGoal)
            self.txtentryone.grid(row=0,column=3)

            self.Label=Label(DataFrame,font=("arial",15,"bold"),bd=5,padx=2,pady=2,text="SubGoal")
            self.Label.grid(row=1,column=0,sticky=W)
            self.Label.config(bg="Red")
            self.Space=Label(DataFrame,text="   ",)
            self.Space.grid(row=1,column=1)
            self.Space.config(bg="Red")
            self.Hash=Label(DataFrame,text="#",font=("arial",15,"bold"))
            self.Hash.grid(row=1,column=2)
            self.Hash.config(bg="Red")
            self.txtentrytwo=Entry(DataFrame,font=("arial",15,"bold"),bd=5,width=42,textvariable=SubGoal)
            self.txtentrytwo.grid(row=1,column=3)

            self.Label=Label(DataFrame,font=("arial",15,"bold"),bd=5,padx=2,pady=2,text="Task")
            self.Label.grid(row=2,column=0,sticky=W)
            self.Label.config(bg="Red")
            self.Space=Label(DataFrame,text="   ")
            self.Space.grid(row=2,column=1)
            self.Space.config(bg="Red")
            self.Hash=Label(DataFrame,text="#",font=("arial",15,"bold"))
            self.Hash.grid(row=2,column=2)
            self.Hash.config(bg="Red")
            self.txtentrythree=Entry(DataFrame,font=("arial",15,"bold"),bd=5,width=42,textvariable=Task)
            self.txtentrythree.grid(row=2,column=3)

            self.Label=Label(DataFrame,font=("arial",15,"bold"),bd=5,padx=2,pady=2,text="User")
            self.Label.grid(row=3,column=0,sticky=W)
            self.Label.config(bg="Red")
            self.Space=Label(DataFrame,text="   ")
            self.Space.grid(row=3,column=1)
            self.Space.config(bg="Red")
            self.Hash=Label(DataFrame,text="#",font=("arial",15,"bold"))
            self.Hash.grid(row=3,column=2)
            self.Hash.config(bg="Red")
            self.txtentryfour=Entry(DataFrame,font=("arial",15,"bold"),bd=5,width=42,textvariable=User)
            self.txtentryfour.grid(row=3,column=3)

            def selectstart():
                user=Tk()
                user.title("Select Starting Date")
                user.config(bg="Blue")
                def abc():
                    self.txtentryfive.delete(0,END)
                    self.txtentryfive.insert(END,cal.get_date())
                    user.destroy()
                cal=Calendar(user,font=("arial",15,"bold"),selectmode="day")
                cal.grid(row=0)
                button=Button(user,text="Go",font=("arial",15,"bold"),width=20,command=abc)
                button.grid(row=1)
                button.config(bg="Red")
            self.Label=Label(DataFrame,font=("arial",15,"bold"),bd=5,padx=2,pady=2,text="Starting Date")
            self.Label.grid(row=4,column=0,sticky=W)
            self.Label.config(bg="Red")
            self.Space=Label(DataFrame,text="   ")
            self.Space.grid(row=4,column=1)
            self.Space.config(bg="Red")
            self.Hash=Label(DataFrame,text="#",font=("arial",15,"bold"))
            self.Hash.grid(row=4,column=2)
            self.Hash.config(bg="Red")
            self.txtentryfive=Entry(DataFrame,font=("arial",15,"bold"),bd=5,width=30,textvariable=StartingDate)
            self.txtentryfive.grid(row=4,column=3,sticky=W)
            button=Button(DataFrame,text="Select",font=("arial",10,"bold"),command=selectstart,bd=10,padx=2,pady=2,width=8)
            button.grid(row=4,column=3,sticky=E)
            button.config(bg="Blue")

            def selectend():
                user=Tk()
                user.title("Select Starting Date")
                user.config(bg="Blue")
                def abc():
                    self.txtentrysix.delete(0,END)
                    self.txtentrysix.insert(END,cal.get_date())
                    user.destroy()
                cal=Calendar(user,font=("arial",15,"bold"),selectmode="day",year=2019,month=10,day=9)
                cal.pack(fill="both",expand=True)
                button=Button(user,text="Go",font=("arial",15,"bold"),width=20,command=abc)
                button.pack()
                button.config(bg="Red")
            self.Label=Label(DataFrame,font=("arial",15,"bold"),bd=5,padx=2,pady=2,text="End Date")
            self.Label.grid(row=5,column=0,sticky=W)
            self.Label.config(bg="Red")
            self.Space=Label(DataFrame,text="   ")
            self.Space.grid(row=5,column=1)
            self.Space.config(bg="Red")
            self.Hash=Label(DataFrame,text="#",font=("arial",15,"bold"))
            self.Hash.grid(row=5,column=2)
            self.Hash.config(bg="Red")
            self.txtentrysix=Entry(DataFrame,font=("arial",15,"bold"),bd=5,width=30,textvariable=EndDate)
            self.txtentrysix.grid(row=5,column=3,sticky=W)
            button=Button(DataFrame,text="Select",font=("arial",10,"bold"),command=selectend,bd=10,padx=2,pady=2,width=8)
            button.grid(row=5,column=3,sticky=E)
            button.config(bg="Blue")

            ShowFrame=Frame(MainFrame)
            ShowFrame.pack()
            ShowFrame.config(bg="Red")
            scroll = Scrollbar(ShowFrame)
            scroll.grid(row=2,column=3,sticky="ns")
            AllData=Listbox(ShowFrame,width=62,height=5,font=("arial",12,"bold"),yscrollcommand=scroll)
            AllData.bind('<<ListboxSelect>>',Click)
            AllData.grid(row=2,column=0,sticky=W)
            AllData.config(bg="Teal")
            scroll.config(command=AllData.yview)

            ButtonFrame=Frame(MainFrame)
            ButtonFrame.pack(side=BOTTOM)
            ButtonFrame.config(bg="Red")
            self.button=Button(ButtonFrame,font=("arial",15,"bold"),bd=10,padx=2,pady=2,width=8,text="Add New",command=AddNew)
            self.button.grid(row=0,column=0)
            self.button.config(bg="Blue")
            self.button=Button(ButtonFrame,font=("arial",15,"bold"),bd=10,padx=2,pady=2,width=8,text="Update",command=Update)
            self.button.grid(row=0,column=1)
            self.button.config(bg="Blue")
            self.button=Button(ButtonFrame,font=("arial",15,"bold"),bd=10,padx=2,pady=2,width=8,text="Search",command=Search)
            self.button.grid(row=0,column=2)
            self.button.config(bg="Blue")
            self.button=Button(ButtonFrame,font=("arial",15,"bold"),bd=10,padx=2,pady=2,width=8,text="Display",command=Display)
            self.button.grid(row=0,column=3)
            self.button.config(bg="Blue")
            self.button=Button(ButtonFrame,font=("arial",15,"bold"),bd=10,padx=2,pady=2,width=8,text="Clear",command=Clear)
            self.button.grid(row=0,column=4)
            self.button.config(bg="Blue")
            self.button=Button(ButtonFrame,font=("arial",15,"bold"),bd=10,padx=2,pady=2,width=8,text="Delete",command=Delete)
            self.button.grid(row=0,column=5)
            self.button.config(bg="Blue")
            self.button=Button(ButtonFrame,font=("arial",15,"bold"),bd=10,padx=2,pady=2,width=8,text="Repeated",command=OK)
            self.button.grid(row=0,column=6)
            self.button.config(bg="Blue")  
        
        def Search():
            Sear=Tk()
            Sear.title("All Tasks")
            Sear.geometry("400x500+1+1")
            Sear.config(bg="yellow")
            Sear.iconbitmap(r"CSS.ico")
            MainFrame=Frame(Sear)
            MainFrame.pack()
            MainFrame.config(bg="yellow")


            for rows in Backend.ViewData():
                if rows[5] not in Task:
                    Date.append(rows[5])

            def Date_onclick(Event):
                Tasks.delete(0,END)
                Users.delete(0,END)
                StartDate.delete(0,END)
                EndDate.delete(0,END)
                for rows in Backend.ViewData():
                    if DateSelect.get() == rows[5]:
                        if rows[3] not in str(Tasks):
                            Tasks.insert(END,rows[3],str(""))
                            Tasks.delete(END,END)

            def Click(Event):
                for rows in Backend.ViewData():
                    if Tasks.get(Tasks.curselection()[0]) == rows[3]:
                        Users.delete(0,END)
                        Users.insert(END,rows[4],str(""))
                        StartDate.delete(0,END)
                        StartDate.insert(END,rows[5],str(""))
                        EndDate.delete(0,END)
                        EndDate.insert(END,rows[6],str(""))

            TitleFrame=Frame(MainFrame)
            TitleFrame.pack(side=TOP)
            TitleFrame.config(bg="yellow")
            label=Label(TitleFrame,font=("arial",47,"bold"),bg="yellow",text="Tasks")
            label.grid(row=0,column=0)

            DataFrame=Frame(MainFrame)
            DataFrame.pack()
            DataFrame.config(bg="Teal")
            DateFrame=Frame(DataFrame)
            DateFrame.pack()
            DateFrame.config(bg="Teal")
            label=Label(DateFrame,font=("arial",15,"bold"),text="Select Date")
            label.grid(row=0,column=0)
            label.config(bg="Teal")
            DateSelect=ttk.Combobox(DateFrame,width=20,textvariable=SelectedDate,state="readonly")
            DateSelect["values"]=(Date)
            DateSelect.bind('<<ComboboxSelected>>',Date_onclick)
            DateSelect.grid(row=1,column=0)

            TaskFrame=Frame(DataFrame)
            TaskFrame.pack()
            TaskFrame.config(bg="yellow")
            label=Label(TaskFrame,font=("arial",15,"bold"),bg="yellow",text="Tasks")
            label.grid(row=0,columnspan=2)
            scroll = Scrollbar(TaskFrame)
            scroll.grid(row=2,column=1,sticky="ns")
            Tasks=Listbox(TaskFrame,width=34,height=7,bg="Light Grey",font=("arial",10,"bold"),yscrollcommand=scroll)
            Tasks.bind('<<ListboxSelect>>',Click)
            Tasks.grid(row=2,column=0)
            scroll.config(command=Tasks.yview)

            UserFrame=Frame(DataFrame)
            UserFrame.pack()
            UserFrame.config(bg="yellow")
            label=Label(UserFrame,font=("arial",12,"bold"),bg="yellow",text="Users")
            label.grid(row=0,column=0)
            label.config(bg="yellow")
            Users=Listbox(UserFrame,width=37,height=2,bg="Light Grey",font=("arial",10,"bold"))
            Users.grid(row=1,column=0)

            DefDateFrame=Frame(DataFrame)
            DefDateFrame.pack()
            DefDateFrame.config(bg="yellow")
            label=Label(DefDateFrame,font=("arial",12,"bold"),bg="yellow",text="Start Date")
            label.grid(row=0,column=0)
            label.config(bg="yellow")
            StartDate=Listbox(DefDateFrame,width=17,height=2,bg="Light Grey",font=("arial",10,"bold"))
            StartDate.grid(row=1,column=0)

            Space1=Label(DefDateFrame,text="     ")
            Space1.grid(row=0,column=1)
            Space1.config(bg="yellow")
            
            label=Label(DefDateFrame,font=("arial",12,"bold"),bg="yellow",text="End Date")
            label.grid(row=0,column=2)
            label.config(bg="yellow")
            EndDate=Listbox(DefDateFrame,width=17,height=2,bg="Light Grey",font=("arial",10,"bold"))
            EndDate.grid(row=1,column=2)

        def TodayTask():
            Today=Tk()
            Today.title("Today's Tasks")
            Today.geometry("400x450+1+1")
            Today.config(bg="Teal")
            Today.iconbitmap(r"CSS.ico")
            MainFrame=Frame(Today)
            MainFrame.pack()
            MainFrame.config(bg="Teal")

            TitleFrame=Frame(MainFrame)
            TitleFrame.pack(side=TOP)
            TitleFrame.config(bg="Teal")
            self.Label=Label(TitleFrame,font=("arial",30,"bold"),text="DateWise Tasks")
            self.Label.grid()
            self.Label.config(bg="Teal")
            

            def Click():
                Tasks.delete(0,END)
                for rows in Backend.ViewData():
                    SRow=rows[5]
                    Smonth=(SRow.find("/"))
                    SMonth=(SRow[:Smonth])
                    abc=(SRow[Smonth+1:])
                    Sdate=(abc.find("/"))
                    SDate=(abc[:Sdate])
                    efg=(abc[Sdate+1:])
                    SYear=(efg)
                    # ERow=rows[6]
                    # Emonth=(ERow.find("/"))
                    # EMonth=(ERow[:Emonth])
                    # abcd=(ERow[Emonth+1:])
                    # Edate=(abcd.find("/"))
                    # EDate=(abcd[:Edate])
                    # efgh=(abcd[Edate+1:])
                    # EYear=(efgh)
                    TYear=((self.txtentrythree.get()))
                    TMonth=((self.txtentrytwo.get()))
                    TDate=((self.txtentryone.get()))
                    if (TDate==SDate) and (TMonth==SMonth) and (TYear==SYear):
                        if rows[3] not in str(Tasks):
                            Tasks.insert(END,rows[3],str(""))
                            Tasks.delete(END,END)
            
            def Click1():
                Tasks.delete(0,END)
                for rows in Backend.ViewData():
                    Row=rows[5]
                    month=(Row.find("/"))
                    Month=(Row[:month])
                    abc=(Row[month+1:])
                    date=(abc.find("/"))
                    Date=(abc[:date])
                    efg=(abc[date+1:])
                    Year=(f"{20}{efg}")
                    Today=(str(datetime.date.today()))
                    TYear=(Today[0:4])
                    TMonth=(Today[5:7])
                    Tdate=(Today[8:10])
                    if len(Date)==1:
                        Date=(f"{0}{Date}")
                    if (Tdate==Date) and (TMonth==Month) and (TYear==Year):
                        if rows[3] not in str(Tasks):
                            Tasks.insert(END,rows[3],str(""))
                            Tasks.delete(END,END)

            DataFrame=Frame(MainFrame)
            DataFrame.pack()
            DataFrame.config(bg="Teal")
            self.Label=Label(DataFrame,font=("arial",15,"bold"),bg="Teal",bd=5,padx=2,pady=2,text="Date")
            self.Label.grid(row=0,column=0)
            self.txtentryone=Entry(DataFrame,font=("arial",15,"bold"),bd=5,width=8,textvariable="Date")
            self.txtentryone.grid(row=1,column=0)
            self.Label=Label(DataFrame,font=("arial",15,"bold"),text="   ")
            self.Label.grid(row=0,column=1)
            self.Label.config(bg="Teal")

            self.Label=Label(DataFrame,font=("arial",15,"bold"),bg="Teal",bd=5,padx=2,pady=2,text="Month")
            self.Label.grid(row=0,column=2)
            self.txtentrytwo=Entry(DataFrame,font=("arial",15,"bold"),bd=5,width=8,textvariable="Month")
            self.txtentrytwo.grid(row=1,column=2)
            self.Label=Label(DataFrame,font=("arial",15,"bold"),text="   ")
            self.Label.grid(row=0,column=3)
            self.Label.config(bg="Teal")

            self.Label=Label(DataFrame,font=("arial",15,"bold"),bg="Teal",bd=5,padx=2,pady=2,text="Year")
            self.Label.grid(row=0,column=4,columnspan=2)
            self.Label.config(bg="Teal")
            self.Label=Label(DataFrame,font=("arial",18,"bold"),bg="Teal",bd=5,padx=2,pady=2,text="20")
            self.Label.grid(row=1,column=4,sticky=W)
            self.txtentrythree=Entry(DataFrame,font=("arial",15,"bold"),bd=5,width=4,textvariable="Year")
            self.txtentrythree.grid(row=1,column=5,sticky=E)
            
            ButtonFrame=Frame(MainFrame)
            ButtonFrame.pack()
            ButtonFrame.config(bg="Teal")
            self.button=Button(ButtonFrame,font=("arial",12,"bold"),fg="Orange",bg="Blue",bd=10,padx=2,pady=2,width=5,height=0,text="Search",command=Click)
            self.button.grid()

            TaskFrame=Frame(MainFrame)
            TaskFrame.pack()
            TaskFrame.config(bg="Teal")
            label=Label(TaskFrame,font=("arial",15,"bold"),text="Tasks")
            label.grid(row=0,columnspan=2)
            label.config(bg="Teal")
            scroll = Scrollbar(TaskFrame)
            scroll.grid(row=1,column=1,sticky="ns")
            Tasks=Listbox(TaskFrame,width=35,height=7,bg="Light Grey",font=("arial",10,"bold"),yscrollcommand=scroll)
            Tasks.grid(row=1,column=0)
            scroll.config(command=Tasks.yview)
            
            ButtonFrame2=Frame(MainFrame)
            ButtonFrame2.pack()
            ButtonFrame2.config(bg="Teal")
            self.button=Button(ButtonFrame,font=("arial",12,"bold"),fg="Orange",bg="Blue",bd=10,padx=2,pady=2,width=10,height=0,text="Today's Task",command=Click1)
            self.button.grid()

        def Report():
            Rep=Tk()
            Rep.title("Report")
            Rep.geometry("500x600+1+1")
            Rep.config(bg="Red")
            Rep.iconbitmap(r"CSS.ico")
            MainFrame=Frame(Rep)
            MainFrame.pack()
            MainFrame.config(bg="Red")

            for rows in Backend.ViewData():
                Row=rows
                if Row[1] not in Main:
                    Main.append(Row[1])
                if Row[3] not in Task:
                    Task.append(rows[3])
            
            def MainSelect_onclick(Event):
                Sub.clear()
                for rows in Backend.ViewData():
                    if MainSelect.get() == rows[1]:
                        if rows[2] not in Sub:
                            Sub.append(rows[2])
                            label=Label(SubFrame,font=("arial",15,"bold"),text="Sub Goals Related To Main Goal")
                            label.grid(row=0,column=0)
                            label.config(bg="Red")
                            SubSelect=ttk.Combobox(SubFrame,width=20,textvariable=SubGoals,state="readonly")
                            SubSelect["values"]=(Sub)
                            SubSelect.bind('<<ComboboxSelected>>',SubSelect_onclick)
                            SubSelect.grid(row=1,column=0)
                                
            def SubSelect_onclick(Event):
                Tasks.delete(0,END)
                for rows in Backend.ViewData():
                    if MainSelect.get() == rows[1]:
                        if SubSelect.get() == rows[2]:
                            if rows[3] not in str(Tasks):
                                Tasks.insert(END,rows[3],str(""))
                                Tasks.delete(END,END)
                                
            def Click(Event):
                for rows in Backend.ViewData():
                    if MainSelect.get() == rows[1]:
                        if SubSelect.get() == rows[2]:
                            if Tasks.get(Tasks.curselection()[0]) == rows[3]:
                                StartDate.delete(0,END)
                                StartDate.insert(END,rows[5],str(""))
                                EndDate.delete(0,END)
                                EndDate.insert(END,rows[6],str(""))
                                Users.delete(0,END)
                                Users.insert(END,rows[4],str(""))

            def MainGoaldef():
                MainPrint=Main[0]
                SubPrint=Sub[0]
                TaskPrint=Tasks.get(Tasks.curselection()[0])
                UsersPrint=Users.get(0)
                StartDatePrint=StartDate.get(0)
                EndDatePrint=EndDate.get(0)
                c=canvas.Canvas("Main Goal Report.pdf")
                pdfmetrics.registerFont(TTFont('Vera', 'Vera.ttf'))
                c.setFont('Vera',size=30)
                c.drawString(150, 750, (f"Persional Assistant"))
                c.setFont('Vera',size=20)
                c.drawString(100, 600, (f"Main Goal = {MainPrint}"))
                c.drawString(100, 550, (f"Sub Goal = {SubPrint}"))
                c.drawString(100, 500, (f"Task = {TaskPrint}"))
                c.drawString(100, 450, (f"User = {UsersPrint}"))
                c.drawString(100, 400, (f"Start Date = {StartDatePrint}"))
                c.drawString(100, 350, (f"End Date = {EndDatePrint}"))
                c.save()

            def Tasksdef():
                c=canvas.Canvas("Tasks Report.pdf")
                pdfmetrics.registerFont(TTFont('Vera', 'Vera.ttf'))
                c.setFont('Vera',size=30)
                c.drawString(150, 750, (f"Persional Assistant"))
                c.setFont('Vera',size=20)
                c.drawString(250, 700, (f"Tasks"))
                x=685
                c.setFont('Vera',size=15)
                for i in Task:
                    c.drawString(75,x,(f"{i}"))
                    x=x-20
                c.save()
            
            def Alldef():
                c=canvas.Canvas("Full Report.pdf")
                pdfmetrics.registerFont(TTFont('Vera', 'Vera.ttf'))
                c.setFont('Vera',size=30)
                c.drawString(150, 750, (f"Persional Assistant"))
                c.setFont('Vera',size=17)
                c.drawString(50, 700, (f"Major Goal"))
                c.drawString(175, 700, (f"Sub Goal"))
                c.drawString(300, 700, (f"Tasks"))
                c.drawString(400, 700, (f"Start Date"))
                c.drawString(500, 700, (f"End Date"))
                x=685
                c.setFont('Vera',size=15)
                for rows in Backend.ViewData():
                    if rows[1] not in M:
                        M.append(rows[1])
                        c.drawString(50,x,(f"{rows[1]}"))
                        x=x-20
                        for m in M:
                            if m == rows[1]:
                                if rows[2] not in S:
                                    S.append(rows[2])
                                    c.drawString(175,x,(f"{rows[2]}"))
                                    x=x-20
                                    for s in S:
                                        if m == rows[1]:
                                            if s == rows[2]:
                                                if rows[3] not in T:
                                                    T.append(rows[3])
                                                    c.drawString(300,x,(f"{rows[3]}"))
                                                    c.drawString(400,x,(f"{rows[5]}"))
                                                    c.drawString(500,x,(f"{rows[6]}"))
                                                    x=x-20
                c.save()


            TitleFrame=Frame(MainFrame)
            TitleFrame.pack(side=TOP)
            TitleFrame.config(bg="Red")
            label=Label(TitleFrame,font=("arial",30,"bold"),text="All Data")
            label.grid(row=0,column=0)
            label.config(bg="Red")

            DataFrame=Frame(MainFrame)
            DataFrame.pack()
            DataFrame.config(bg="Red")
            MajorFrame=Frame(DataFrame)
            MajorFrame.pack()
            MajorFrame.config(bg="Red")
            label=Label(MajorFrame,font=("arial",15,"bold"),text="Main Goals")
            label.grid(row=0,column=0)
            label.config(bg="Red")
            MainSelect=ttk.Combobox(MajorFrame,width=20,textvariable=MajorGoals,state="readonly")
            MainSelect["values"]=(Main)
            MainSelect.bind('<<ComboboxSelected>>',MainSelect_onclick)
            MainSelect.grid(row=1,column=0)

            SubFrame=Frame(DataFrame)
            SubFrame.pack()
            SubFrame.config(bg="Red")
            label=Label(SubFrame,font=("arial",15,"bold"),text="Sub Goals Related To Main Goal")
            label.grid(row=0,column=0)
            label.config(bg="Red")
            SubSelect=ttk.Combobox(SubFrame,width=20,textvariable=SubGoals,state="readonly")
            SubSelect["values"]=(Sub)
            SubSelect.grid(row=1,column=0)

            TaskFrame=Frame(DataFrame)
            TaskFrame.pack()
            TaskFrame.config(bg="Red")
            label=Label(TaskFrame,font=("arial",15,"bold"),text="Tasks Related To Sub Goal")
            label.grid(row=0,columnspan=2)
            label.config(bg="Red")
            scroll = Scrollbar(TaskFrame)
            scroll.grid(row=2,column=1,sticky="ns")
            Tasks=Listbox(TaskFrame,width=35,height=7,bg="Light Grey",font=("arial",10,"bold"),yscrollcommand=scroll)
            Tasks.bind('<<ListboxSelect>>',Click)
            Tasks.grid(row=2,column=0)
            scroll.config(command=Tasks.yview)

            DateFrame=Frame(DataFrame)
            DateFrame.pack()
            DateFrame.config(bg="Red")
            label=Label(DateFrame,font=("arial",12,"bold"),text="Start Date")
            label.grid(row=0,column=0)
            label.config(bg="Red")
            StartDate=Listbox(DateFrame,width=17,height=2,bg="Light Grey",font=("arial",10,"bold"))
            StartDate.grid(row=2,column=0)

            Space1=Label(DateFrame,text="     ")
            Space1.grid(row=0,column=1)
            Space1.config(bg="Red")
            
            label=Label(DateFrame,font=("arial",12,"bold"),text="End Date")
            label.grid(row=0,column=2)
            label.config(bg="Red")
            EndDate=Listbox(DateFrame,width=17,height=2,bg="Light Grey",font=("arial",10,"bold"))
            EndDate.grid(row=2,column=2)

            UsersFrame=Frame(DataFrame)
            UsersFrame.pack()
            UsersFrame.config(bg="Red")
            label=Label(UsersFrame,font=("arial",12,"bold"),text="Users")
            label.grid(row=0,column=0)
            label.config(bg="Red")
            Users=Listbox(UsersFrame,width=38,height=2,bg="Light Grey",font=("arial",10,"bold"))
            Users.grid(row=1,column=0)

            PrintFrame=Frame(DataFrame)
            PrintFrame.pack()
            PrintFrame.config(bg="Red")
            label=Label(PrintFrame,font=("arial",15,"bold"),text="Print Report")
            label.grid(row=0,columnspan=3)
            label.config(bg="Red")

            self.button=Button(PrintFrame,font=("arial",10,"bold"),fg="Orange",bg="Blue",bd=10,padx=2,pady=2,width=15,text="Via Main Goal",command=MainGoaldef)
            self.button.grid(row=1,column=0)
            label=Label(PrintFrame,font=("arial",15,"bold"),text=" ")
            label.grid(row=1,column=1)
            label.config(bg="Red")
            self.button=Button(PrintFrame,font=("arial",10,"bold"),fg="Orange",bg="Blue",bd=10,padx=2,pady=2,width=15,text="Via Tasks",command=Tasksdef)
            self.button.grid(row=1,column=2)
            label=Label(PrintFrame,font=("arial",8,"bold"),text=" ")
            label.grid(row=2,column=0)
            label.config(bg="Red")
            self.button=Button(PrintFrame,font=("arial",10,"bold"),fg="Orange",bg="Blue",bd=10,padx=2,pady=2,width=36,text="Full",command=Alldef)
            self.button.grid(row=3,columnspan=3)

        DataFrame=Frame(MainFrame)
        DataFrame.grid()
        DataFrame.config(bg="Teal")
        label=Label(DataFrame,font=("arial",15,"bold"),text=" ")
        label.grid(row=0,column=0)
        label.config(bg="Teal")
        self.button=Button(DataFrame,font=("arial",15,"bold"),fg="Orange",bg="Blue",bd=10,padx=2,pady=2,width=12,text="Add Goals",command=AddData)
        self.button.grid(row=1,column=0)

        label=Label(DataFrame,font=("arial",15,"bold"),text=" ")
        label.grid(row=2,column=0)
        label.config(bg="Teal")
        self.button=Button(DataFrame,font=("arial",15,"bold"),fg="Orange",bg="Blue",bd=10,padx=2,pady=2,width=12,text="Search Tasks",command=Search)
        self.button.grid(row=3,column=0)

        label=Label(DataFrame,font=("arial",15,"bold"),text=" ")
        label.grid(row=4,column=0)
        label.config(bg="Teal")
        self.button=Button(DataFrame,font=("arial",15,"bold"),fg="Orange",bg="Blue",bd=10,padx=2,pady=2,width=12,text="Today's Tasks",command=TodayTask)
        self.button.grid(row=5,column=0)

        label=Label(DataFrame,font=("arial",15,"bold"),text=" ")
        label.grid(row=6,column=0)
        label.config(bg="Teal")
        self.button=Button(DataFrame,font=("arial",15,"bold"),fg="Orange",bg="Blue",bd=10,padx=2,pady=2,width=12,text="Report",command=Report)
        self.button.grid(row=7,column=0)
        label=Label(DataFrame,font=("arial",15,"bold"),text=" ")
        label.grid(row=8,column=0)
        label.config(bg="Teal")
        
        ComSoftFrame=Frame(MainFrame)
        ComSoftFrame.grid(sticky=S)
        ComSoftFrame.config(bg="Grey")
        label1=Label(ComSoftFrame,font=("arial",10,"bold"),text="   ")
        label1.grid(row=0,column=0,sticky=S)
        label1.config(bg="Grey")
        label1=Label(ComSoftFrame,font=("arial",8,"bold"),text="Designed By ")
        label1.grid(row=0,column=0,sticky=S)
        label1.config(bg="Grey")
        label1=Label(ComSoftFrame,font=("arial",12,"bold"),text="ComSoft Systems")
        label1.grid(row=0,column=2,sticky=S)
        label1.config(bg="Grey")

if __name__=="__main__":
    root=Tk()
    application=Dashboard(root)
    root.mainloop()